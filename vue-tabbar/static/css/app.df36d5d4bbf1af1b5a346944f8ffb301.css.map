{"version":3,"sources":["app.df36d5d4bbf1af1b5a346944f8ffb301.css"],"names":[],"mappings":"AA4GA,QACE,eAAgB,AAChB,OAAQ,AACR,SAAU,AACV,WAAY,AACZ,YAAa,AACb,sBAAuB,AAEvB,kBAAmB,AACnB,oBAAqB,AACrB,YAAc,CACf,AACD,aAEU,6BAA+B,CACxC,AACD,aAEU,6BAA+B,CACxC,AAWD,uBACA,GACI,aAAc,AACd,SAAW,CACd,AACD,GACI,SAAU,AACV,SAAW,CACd,CACA,AAWD,uBACA,GACI,SAAU,AACV,SAAW,CACd,AACD,GACI,aAAc,AACd,SAAW,CACd,CACA,AACD,aACE,kBAAmB,AACnB,kBAAoB,AAEpB,YAAa,AACb,WAAY,AACZ,MAAQ,CACT,AACD,kBACI,cAAe,AACf,YAAc,AACd,aAAe,AACf,gBAAiB,AACjB,aAAe,CAClB,AACD,oBACI,gBAAiB,AACjB,eAAkB,CACrB,AACD,2BACI,aAAe,CAClB,AAaD,KAEE,mBAAoB,AACpB,WAAe,AACf,iBAAkB,AAClB,gBAAmB,CAAE,AACvB,8IAgCE,SAAU,AACV,UAAW,AACX,SAAU,AACV,gBAAiB,AACjB,gBAAiB,AACjB,SAAW,CAAE,AACf,oEAUE,kBAAmB,AACnB,eAAoB,CAAE,AAKxB,qCAEE,WAAe,AACf,SAAW,CAAE,AACf,4BACE,WAAe,AACf,SAAW,CAAE,AACf,iCACE,WAAe,AACf,SAAW,CAAE,AACf,oBACE,sBAAyB,CAAE,AAC7B,kCACE,cAAe,AACf,oBAAsB,CAAE,AAC1B,iBAEE,qBAAuB,CAAE,AAC3B,IACE,WAAY,AACZ,YAAa,AACb,aAAe,CAAE,AACnB,UACE,qBAAuB,CAAE,AAC3B,YACE,eAAgB,AAChB,UAAY,AACZ,QAAS,AACT,SAAU,AACV,OAAQ,AACR,WAAY,AACZ,qBAAuB,CAAE,AAE3B,gBAEE,uBAAyB,CAAE,AAC7B,4CACE,UAAW,AAEX,yBAA8B,CAAE,AAClC,4CACE,UAAW,AAEX,0BAA+B,CAAE,AAGnC,sFACE,SAAW,CAAE,AACf,uBACE,YAAe,CAAE,AACnB,sBACE,UAAa,CAAE,AACjB,gCACE,SAAW,CAAE","file":"app.df36d5d4bbf1af1b5a346944f8ffb301.css","sourcesContent":["\n@charset \"UTF-8\";\n/****\r* 容器属性\r* 内容排列方向  flex-direction属性决定主轴的方向（即项目的排列方向）。\r* row（默认值）：主轴为水平方向，起点在左端。\r* row-reverse：主轴为水平方向，起点在右端。\r* column：主轴为垂直方向，起点在上沿。\r* column-reverse：主轴为垂直方向，起点在下沿。\r*****/\n/**\r* 容器属性\r* 布局元素一排不下时，如何换行\r* @params nowrap 不换行\r* @params wrap 换行，第一行在上方\r* @params wrap-reverse  换行，第一行在下方\r*/\n/***\r* flex-flow\r* 容器属性  是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\r**/\n/**\r* align-items\r* 容器属性  元素的 垂直对齐\r* @flex-start     元素的顶端对齐 并靠元素的顶端分布\r* @flex-end       元素的底部对齐 并靠容器的底部分布\r* @center         容器中垂直居中，并每个元素的中心点对齐\r* @baseline       项目的第一行文字的基线对齐。\r* @stretch        （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\r*/\n/**\r* justify-content\r* 容器属性  元素的 水平对齐和分布方式\r* @flex-start     左对齐\r* @flex-end       右对齐\r* @center         居中\r* @space-between  两端对齐，项目之间的间隔都相等，与边框没有间距\r* @space-around   每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\r*/\n/**\r* align-content\r* 容器属性\r* 属性定义了多根轴线的对齐方式。项目达到多行时的分布方式，如果项目只有一行，该属性不起作用。\r* @params flex-start 靠容器项端分布\r* @params flex-end 靠容器底部分布\r* @params center  垂直居中分布\r* @params space-between  垂直平均分布\r* @params space-around  每行元素的上下间距相等，因此每行之间的间隔要 比首行和未行 与边框的间隔大一倍\r* @params stretch  垂直拉伸占满整个容器\r*/\n/**\r* 子元素的属性 Flex, 有三个属性，是 flex-grow, flex-shrink 和 flex-basis的简写方式\r*\r* @$fg=flex-grow\r* 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大，属性都为1，则它们将等分剩余空间\r*\r* @$fs=flex-shrink\r* 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\r* flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。\r\r* @$fb =  flex-basis\r* 设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\r*它的默认值为auto，即项目的本来大小\r*/\n/***\r* align-self\r* 子元素的属性\r* 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。\r* 默认值为auto，表示继承父元素的align-items属性\r* 属性可能取6个值，除了auto，其他都与align-items属性完全一致\r**/\n/***\r* order\r* 子元素的属性\r* 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\r**/\n/*文字超出隐藏，显示...,$value显示几行文字*/\n/*图标加载*/\n.tabber {\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1rem;\n  background-color: #fff;\n  display: -webkit-box;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.tabbar-show {\n  -webkit-animation: tabbar-show 1s ease;\n          animation: tabbar-show 1s ease;\n}\n.tabbar-hide {\n  -webkit-animation: tabbar-hide 1s ease;\n          animation: tabbar-hide 1s ease;\n}\n@-webkit-keyframes tabbar-show {\n0% {\n    bottom: -2rem;\n    opacity: 0;\n}\n100% {\n    bottom: 0;\n    opacity: 1;\n}\n}\n@keyframes tabbar-show {\n0% {\n    bottom: -2rem;\n    opacity: 0;\n}\n100% {\n    bottom: 0;\n    opacity: 1;\n}\n}\n@-webkit-keyframes tabbar-hide {\n0% {\n    bottom: 0;\n    opacity: 1;\n}\n100% {\n    bottom: -2rem;\n    opacity: 0;\n}\n}\n@keyframes tabbar-hide {\n0% {\n    bottom: 0;\n    opacity: 1;\n}\n100% {\n    bottom: -2rem;\n    opacity: 0;\n}\n}\n.tabber-item {\n  text-align: center;\n  padding-top: 0.1rem;\n  -webkit-box-flex: 1;\n  -moz-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n}\n.tabber-item span {\n    margin: 0 auto;\n    width: 0.5rem;\n    height: 0.5rem;\n    overflow: hidden;\n    display: block;\n}\n.tabber-item strong {\n    line-height: 1.6;\n    font-size: 0.2rem;\n}\n.tabber-item.active strong {\n    color: #ED5555;\n}\n\n@charset \"UTF-8\";\n/****\r* 容器属性\r* 内容排列方向  flex-direction属性决定主轴的方向（即项目的排列方向）。\r* row（默认值）：主轴为水平方向，起点在左端。\r* row-reverse：主轴为水平方向，起点在右端。\r* column：主轴为垂直方向，起点在上沿。\r* column-reverse：主轴为垂直方向，起点在下沿。\r*****/\n/**\r* 容器属性\r* 布局元素一排不下时，如何换行\r* @params nowrap 不换行\r* @params wrap 换行，第一行在上方\r* @params wrap-reverse  换行，第一行在下方\r*/\n/***\r* flex-flow\r* 容器属性  是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\r**/\n/**\r* align-items\r* 容器属性  元素的 垂直对齐\r* @flex-start     元素的顶端对齐 并靠元素的顶端分布\r* @flex-end       元素的底部对齐 并靠容器的底部分布\r* @center         容器中垂直居中，并每个元素的中心点对齐\r* @baseline       项目的第一行文字的基线对齐。\r* @stretch        （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\r*/\n/**\r* justify-content\r* 容器属性  元素的 水平对齐和分布方式\r* @flex-start     左对齐\r* @flex-end       右对齐\r* @center         居中\r* @space-between  两端对齐，项目之间的间隔都相等，与边框没有间距\r* @space-around   每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\r*/\n/**\r* align-content\r* 容器属性\r* 属性定义了多根轴线的对齐方式。项目达到多行时的分布方式，如果项目只有一行，该属性不起作用。\r* @params flex-start 靠容器项端分布\r* @params flex-end 靠容器底部分布\r* @params center  垂直居中分布\r* @params space-between  垂直平均分布\r* @params space-around  每行元素的上下间距相等，因此每行之间的间隔要 比首行和未行 与边框的间隔大一倍\r* @params stretch  垂直拉伸占满整个容器\r*/\n/**\r* 子元素的属性 Flex, 有三个属性，是 flex-grow, flex-shrink 和 flex-basis的简写方式\r*\r* @$fg=flex-grow\r* 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大，属性都为1，则它们将等分剩余空间\r*\r* @$fs=flex-shrink\r* 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\r* flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。\r\r* @$fb =  flex-basis\r* 设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\r*它的默认值为auto，即项目的本来大小\r*/\n/***\r* align-self\r* 子元素的属性\r* 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。\r* 默认值为auto，表示继承父元素的align-items属性\r* 属性可能取6个值，除了auto，其他都与align-items属性完全一致\r**/\n/***\r* order\r* 子元素的属性\r* 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\r**/\n/*文字超出隐藏，显示...,$value显示几行文字*/\n/*图标加载*/\n.tabber {\n  position: fixed;\n  left: 0;\n  bottom: 0;\n  width: 100%;\n  height: 1rem;\n  background-color: #fff;\n  display: -webkit-box;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n.tabbar-show {\n  -webkit-animation: tabbar-show 1s ease;\n          animation: tabbar-show 1s ease;\n}\n.tabbar-hide {\n  -webkit-animation: tabbar-hide 1s ease;\n          animation: tabbar-hide 1s ease;\n}\n@-webkit-keyframes tabbar-show {\n0% {\n    bottom: -2rem;\n    opacity: 0;\n}\n100% {\n    bottom: 0;\n    opacity: 1;\n}\n}\n@keyframes tabbar-show {\n0% {\n    bottom: -2rem;\n    opacity: 0;\n}\n100% {\n    bottom: 0;\n    opacity: 1;\n}\n}\n@-webkit-keyframes tabbar-hide {\n0% {\n    bottom: 0;\n    opacity: 1;\n}\n100% {\n    bottom: -2rem;\n    opacity: 0;\n}\n}\n@keyframes tabbar-hide {\n0% {\n    bottom: 0;\n    opacity: 1;\n}\n100% {\n    bottom: -2rem;\n    opacity: 0;\n}\n}\n.tabber-item {\n  text-align: center;\n  padding-top: 0.1rem;\n  -webkit-box-flex: 1;\n  -moz-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n}\n.tabber-item span {\n    margin: 0 auto;\n    width: 0.5rem;\n    height: 0.5rem;\n    overflow: hidden;\n    display: block;\n}\n.tabber-item strong {\n    line-height: 1.6;\n    font-size: 0.2rem;\n}\n.tabber-item.active strong {\n    color: #ED5555;\n}\n@charset \"UTF-8\";\n/****\r* 容器属性\r* 内容排列方向  flex-direction属性决定主轴的方向（即项目的排列方向）。\r* row（默认值）：主轴为水平方向，起点在左端。\r* row-reverse：主轴为水平方向，起点在右端。\r* column：主轴为垂直方向，起点在上沿。\r* column-reverse：主轴为垂直方向，起点在下沿。\r*****/\n/**\r* 容器属性\r* 布局元素一排不下时，如何换行\r* @params nowrap 不换行\r* @params wrap 换行，第一行在上方\r* @params wrap-reverse  换行，第一行在下方\r*/\n/***\r* flex-flow\r* 容器属性  是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。\r**/\n/**\r* align-items\r* 容器属性  元素的 垂直对齐\r* @flex-start     元素的顶端对齐 并靠元素的顶端分布\r* @flex-end       元素的底部对齐 并靠容器的底部分布\r* @center         容器中垂直居中，并每个元素的中心点对齐\r* @baseline       项目的第一行文字的基线对齐。\r* @stretch        （默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\r*/\n/**\r* justify-content\r* 容器属性  元素的 水平对齐和分布方式\r* @flex-start     左对齐\r* @flex-end       右对齐\r* @center         居中\r* @space-between  两端对齐，项目之间的间隔都相等，与边框没有间距\r* @space-around   每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。\r*/\n/**\r* align-content\r* 容器属性\r* 属性定义了多根轴线的对齐方式。项目达到多行时的分布方式，如果项目只有一行，该属性不起作用。\r* @params flex-start 靠容器项端分布\r* @params flex-end 靠容器底部分布\r* @params center  垂直居中分布\r* @params space-between  垂直平均分布\r* @params space-around  每行元素的上下间距相等，因此每行之间的间隔要 比首行和未行 与边框的间隔大一倍\r* @params stretch  垂直拉伸占满整个容器\r*/\n/**\r* 子元素的属性 Flex, 有三个属性，是 flex-grow, flex-shrink 和 flex-basis的简写方式\r*\r* @$fg=flex-grow\r* 属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大，属性都为1，则它们将等分剩余空间\r*\r* @$fs=flex-shrink\r* 属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。\r* flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。\r\r* @$fb =  flex-basis\r* 设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。\r*它的默认值为auto，即项目的本来大小\r*/\n/***\r* align-self\r* 子元素的属性\r* 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。\r* 默认值为auto，表示继承父元素的align-items属性\r* 属性可能取6个值，除了auto，其他都与align-items属性完全一致\r**/\n/***\r* order\r* 子元素的属性\r* 属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。\r**/\n/*文字超出隐藏，显示...,$value显示几行文字*/\n/*图标加载*/\nbody {\n  /*font-family:'PingFang SC','Helvetica Neue',Helvetica,STHeitiSC-Light,Arial,sans-serif;*/\n  background: #f2f2f2;\n  color: #333333;\n  line-height: 100%;\n  font-size: 0.24rem; }\nbody,\nnav,\ndl,\ndt,\ndd,\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\nul,\nol,\nli,\ninput,\nbutton,\ntextarea,\nfooter,\nb,\nem,\nstrong,\ni,\ns,\nsmall,\ncite,\nspan,\nmark,\ntime,\naddress,\narticle,\nsection {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  list-style: none;\n  font-weight: 400;\n  outline: 0; }\naddress, ul, li, dl, dt, dd,\ncaption,\ncite,\ncode,\ndfn,\nem,\nstrong,\nth,\nvar,\nsmall {\n  font-style: normal;\n  font-weight: normal; }\n:-moz-placeholder {\n  /* Mozilla Firefox 4 to 18 */\n  color: #999999;\n  opacity: 1; }\n::-moz-placeholder {\n  /* Mozilla Firefox 19+ */\n  color: #999999;\n  opacity: 1; }\ninput:-ms-input-placeholder {\n  color: #999999;\n  opacity: 1; }\ninput::-webkit-input-placeholder {\n  color: #999999;\n  opacity: 1; }\n::-webkit-scrollbar {\n  display: none !important; }\na:link, a:visited, a:hover, a:active {\n  color: #ED5555;\n  text-decoration: none; }\n*, *:before, *:after {\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box; }\nimg {\n  width: 100%;\n  height: 100%;\n  display: block; }\n.comindex {\n  padding-bottom: 1.4rem; }\n.comdefails {\n  position: fixed;\n  top: 0.9rem;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 44;\n  background-color: #fff; }\n/*****************************************************************************************\r\t\t\t\t\t\t\t\t路由动画\r*****************************************************************************************/\n.transitionName {\n  -webkit-transition: all .3s ease;\n  transition: all .3s ease; }\n.slide-left-enter, .slide-right-leave-active {\n  opacity: 0;\n  -webkit-transform: translate(30px, 0);\n  transform: translate(30px, 0); }\n.slide-left-leave-active, .slide-right-enter {\n  opacity: 0;\n  -webkit-transform: translate(-30px, 0);\n  transform: translate(-30px, 0); }\n.slide-left-enter-to, .slide-right-leave-to {\n  opacity: 0; }\n.slide-left-leave-to, .slide-right-enter-to {\n  opacity: 0; }\n.mint-swipe-indicators {\n  bottom: 0.1rem; }\n.mint-swipe-indicator {\n  opacity: 0.6; }\n.mint-swipe-indicator.is-active {\n  opacity: 1; }\n/*****************************************************************************************\r\t\t\t\t\t\t\t\tHeader\r*****************************************************************************************/\n"]}